apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: service-a
spec:
  hosts:
    - service-a.default.svc.cluster.local
  http:
    - route:
        - destination:
            host: service-a.default.svc.cluster.local
            weight: 100
      retries:
        attempts: 3
        perTryTimeout: 2s
      timeout: 5s
      fault:
        abort:
          httpStatus: 500
          percentage:
            value: 5  # Simulate 5% failure
      mirror:
        host: service-b.default.svc.cluster.local  # Fallback to Service B
        percentage: 100  # Send all requests to Service B if Service A is down




apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: health-failover
  namespace: B6vv
spec:
  hosts:
  - "location-management.B6vv.svc.cluster.local"  # Target the location service
  gateways:
  - mesh
  http:
  - match:
    - uri:
        exact: /actuator/health
    # Primary route to location-management
    route:
    - destination:
        host: location-management.B6vv.svc.cluster.local
        port:
          number: 8080
    # Circuit breaker settings (via DestinationRule)
    retries:
      attempts: 1
      retryOn: 5xx,gateway-error
    # Fallback to mobile-phone-management with path rewrite
    fault:
      abort:
        percentage:
          value: 100
        httpStatus: 503  # Simulate failure for testing
  # Fallback route when the primary fails
  - match:
    - uri:
        exact: /actuator/health
      headers:
        x-envoy-failed: "true"  # Triggered after retries fail
    route:
    - destination:
        host: mobile-phone-management.B6vv.svc.cluster.local
        port:
          number: 8080
      rewrite:
        uri: /specific/health  # Rewrite path for mobile service




apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: nginx-gateway
  namespace: <your-namespace>
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"



apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: nginx-vs
  namespace: <your-namespace>
spec:
  hosts:
  - "*"
  gateways:
  - nginx-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: nginx
        port:
          number: 80






apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: service-a
spec:
  hosts:
    - service-a.default.svc.cluster.local
  http:
    - route:
        - destination:
            host: service-a
      retries:
        attempts: 3
        perTryTimeout: 2s
        retryOn: "5xx"
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: service-b.default.svc.cluster.local
            port:
              number: 80
          headers:
            request:
              set:
                :path: /api/serviceb-endpoint  # Forward request to ServiceB API
